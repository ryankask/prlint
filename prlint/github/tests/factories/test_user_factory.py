from django.contrib.auth import get_user_model
from django.test import TestCase

from ...factories import UserFactory


class TestUserFactory(TestCase):

    user_model = get_user_model()

    def test_make_single(self):
        """
        UserFactory can make a single User

        Names and email are generated by Fuzzy and are more than the empty
        string.
        """
        UserFactory()

        self.assertEqual(self.user_model.objects.count(), 1)
        created_user = self.user_model.objects.first()
        self.assertGreater(created_user.username, '')
        self.assertGreater(created_user.first_name, '')
        self.assertGreater(created_user.last_name, '')
        self.assertGreater(created_user.email, '')

    def test_make_multi(self):
        """
        UserFactory can create multiple Users with default settings

        Generated username, names and email do not match between created Users.
        """
        UserFactory.create_batch(2)

        self.assertEqual(self.user_model.objects.count(), 2)
        user_first = self.user_model.objects.first()
        user_last = self.user_model.objects.last()
        for varname in ('username', 'first_name', 'last_name', 'email'):
            self.assertNotEqual(
                getattr(user_first, varname),
                getattr(user_last, varname),
                'Both users found to have same "{}" attribute'.format(varname)
            )
